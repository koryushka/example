swagger: '2.0'
info:
  title: Curago API
  description: API documentation for Curago
  version: 1.3.0
schemes:
  - http
basePath: /api/v1
produces:
  - application/json
paths:
  /users:
    post:
      summary: Registers user
      description: Email registration. Requires email, password, and password_confirmation params. A verification email will be sent to the email address provided.
      parameters:
        - name: data
          in: body
          schema:
            $ref: '#/definitions/RegistrationInput'
      responses:
        200:
          description: OK
        403:
          description: redurect_url is missing or not allowed, or user creation error
      tags:
        - Users
    put:
      summary: Updates user's data (password, email)
      description: Updates user's data (password, email). For updating password current_password field is required
      parameters:
        - name: data
          in: body
          schema:
            $ref: '#/definitions/UserUpdateInput'
      responses:
        200:
          description: OK
        403:
          description: Update error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: User not found
        422:
          description: Incorrect request body
          schema:
            $ref: '#/definitions/ErrorsContainer'
        default:
          description: Unxpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Users
  /users/me:
    get:
      summary: Current user with profile
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unxpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Users
  /users/me/profile:
    get:
      summary: Returns profile of current user
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: Unxpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Users
    put:
      summary: Updates current user profile
      parameters:
        - name: profile
          description: Profile object
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProfileInput'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/Profile'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        default:
          description: Unxpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Users
  /users/{user_id}/profile:
    get:
      summary: Profile of specified user
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: Unxpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Users
  /oauth/token:
    post:
      summary: Authenticates user
      description: Authenticates user and returns authorization token
      parameters:
        - name: credentials
          in: body
          schema:
            $ref: '#/definitions/SignInCredentials'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SignInResponse'
      tags:
        - Auth
  /calendars_groups:
    get:
      summary: Current user calendar groups
      description: Returns all calendar groups created by current user or shared with him
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ArrayOfCalendarGroups'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Calendar Groups
    post:
      summary: Create calendar group
      description: Creates new calendar group
      parameters:
        - name: calendars_group
          in: body
          required: true
          schema:
            $ref: '#/definitions/CalendarsGroupInput'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/CalendarsGroup'
        400:
          description: Validation errors
          schema:
            $ref: '#/definitions/ValidationErrorsContainer'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Calendar Groups
  /calendars_groups/{id}:
    put:
      summary: Update calendar group
      description: Updates calendar group information by ID
      parameters:
        - name: id
          description: Calendars group ID
          in: path
          required: true
          type: integer
        - name: calendars_group
          in: body
          required: true
          schema:
            $ref: '#/definitions/CalendarsGroupInput'
      responses:
        201:
          description: Updated
          schema:
            $ref: '#/definitions/CalendarsGroup'
        400:
          description: Validation errors
          schema:
            $ref: '#/definitions/ValidationErrorsContainer'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Calendar Groups
    delete:
      summary: Delete calendar group
      description: Deletes calendar group by ID
      parameters:
        - name: id
          description: Calendars group ID
          in: path
          required: true
          type: integer
      responses:
        204:
          description: Deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Calendar Groups
  /calendars:
    get:
      summary: Current user calendars
      description: Returns all calendars created by current user or shared with him
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ArrayOfCalendars'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Calendars
    post:
      summary: Create calendar
      description: Creates new calendar
      parameters:
        - name: calendar
          in: body
          required: true
          schema:
            $ref: '#/definitions/CalendarInput'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Calendar'
        400:
          description: Validation errors
          schema:
            $ref: '#/definitions/ValidationErrorsContainer'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Calendars
  /calendars/{id}:
    put:
      summary: Update calendar
      description: Updates calendar information by ID
      parameters:
        - name: id
          description: Calendar ID
          in: path
          required: true
          type: integer
        - name: calendar
          in: body
          required: true
          schema:
            $ref: '#/definitions/CalendarInput'
      responses:
        201:
          description: Updated
          schema:
            $ref: '#/definitions/CalendarInput'
        400:
          description: Validation errors
          schema:
            $ref: '#/definitions/ValidationErrorsContainer'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Calendars
    delete:
      summary: Delete calendar
      description: Deletes calendar by ID
      parameters:
        - name: id
          description: Calendars ID
          in: path
          required: true
          type: integer
      responses:
        204:
          description: Deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Calendars
  /calendars/{id}/events:
    get:
      summary: Returns items of specified calendar
      parameters:
        - name: id
          description: Calendars ID
          in: path
          required: true
          type: integer
        - name: since
          description: Date and time which is bein used for abtaining  updates
          in: query
          type: string
          format: date-time
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/EventsContaner'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Events
        - Calendars
  /calendars/{id}/events/{event_id}:
    post:
      summary: Add specified event to specified calendar
      parameters:
        - name: id
          description: Calendars ID
          in: path
          required: true
          type: integer
        - name: event_id
          description: ID of event which should be added
          in: path
          required: true
          type: integer
      responses:
        200:
          description: OK
        406:
          description: Impossible add event to the same calendar twice
          schema:
            $ref: '#/definitions/ErrorsContainer'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Events
        - Calendars
    delete:
      summary: Removes spcified event from specified calendar
      parameters:
        - name: id
          description: Calendars ID
          in: path
          required: true
          type: integer
        - name: event_id
          description: ID of event which should be removed
          in: path
          required: true
          type: integer
      responses:
        204:
          description: Deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Events
        - Calendars
  /events:
    get:
      summary: Current user calendar items
      description: Returns all calendar items created by current user or shared with him
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ArrayOfEvents'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Events
    post:
      summary: Create calendar item
      description: |
        Creates new calendar item.
        
        Examples:
        
        **E.B. choir practice weekdays at 5:30pm:**
        
        *Event object properties:*
        - **title**: E.B. choir practice
        - **starts_at:** 5:30pm with date
        - **event_recurrences_attributes**: array of EventReccurenceInput objects
          with following day property values: 1, 2, 3, 4, 5
      parameters:
        - name: event
          in: body
          required: true
          schema:
            $ref: '#/definitions/EventInput'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Event'
        400:
          description: Validation errors
          schema:
            $ref: '#/definitions/ValidationErrorsContainer'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Events
  /events/{id}:
    get:
      summary: Returns event
      parameters:
        - name: id
          description: Calendar's ID
          in: path
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Event'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Events
    put:
      summary: Updates event
      parameters:
        - name: id
          description: Calendar's ID
          in: path
          required: true
          type: integer
        - name: event
          in: body
          required: true
          schema:
            $ref: '#/definitions/EventInput'
      responses:
        201:
          description: Updated
          schema:
            $ref: '#/definitions/Event'
        400:
          description: Validation errors
          schema:
            $ref: '#/definitions/ValidationErrorsContainer'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Events
    delete:
      summary: Deletes event
      parameters:
        - name: id
          description: Calendar's ID
          in: path
          required: true
          type: integer
      responses:
        204:
          description: Deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Events
  /events/{id}/cancellations:
    post:
      summary: Cancels event for a specific date
      parameters:
        - name: id
          description: Event ID
          in: path
          required: true
          type: integer
        - name: data
          description: Cancellation data
          in: body
          required: true
          schema:
            $ref: '#/definitions/EventCancellationInput'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/EventCancellation'
        400:
          description: Validation errors
          schema:
            $ref: '#/definitions/ValidationErrorsContainer'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Events
        - Event Cancellations
  /event_cancellations/{id}:
    put:
      summary: Updates event cancellation
      parameters:
        - name: id
          description: Event ID
          in: path
          required: true
          type: integer
        - name: data
          description: Cancellation data
          in: body
          required: true
          schema:
            $ref: '#/definitions/EventCancellationInput'
      responses:
        200:
          description: Updated
          schema:
            $ref: '#/definitions/EventCancellation'
        400:
          description: Validation errors
          schema:
            $ref: '#/definitions/ValidationErrorsContainer'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Events
        - Event Cancellations
    delete:
      summary: Removes event cancellation
      parameters:
        - name: id
          description: Event ID
          in: path
          required: true
          type: integer
      responses:
        204:
          description: Deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Events
        - Event Cancellations
  /events/{event_id}/lists/{list_id}:
    post:
      summary: Assigns specified list to specified event
      parameters:
        - name: event_id
          description: Event ID
          in: path
          required: true
          type: integer
        - name: list_id
          description: ID of list which should be added
          in: path
          required: true
          type: integer
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Events
    delete:
      summary: Removes spcified list from specified event
      parameters:
        - name: event_id
          description: Event ID
          in: path
          required: true
          type: integer
        - name: list_id
          description: ID of list which should be removed
          in: path
          required: true
          type: integer
      responses:
        204:
          description: Deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Events
  /files:
    post:
      summary: Accepts files
      description: Accept files and sends them to storage
      consumes: [multipart/form-data]
      parameters:
        - name: file
          description: binary file
          in: formData
          required: true
          type: file
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/File'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Files
  /files/{id}:
    get:
      summary: Returns information about file by its ID
      parameters:
        - name: id
          description: File's ID
          in: path
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/File'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Files
    delete:
      summary: Removes file
      parameters:
        - name: id
          description: File's ID
          in: path
          required: true
          type: integer
      responses:
        204:
          description: Detached
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Files
  /lists:
    get:
      summary: Current user lists
      description: Returns all lists created by current user or shared with him
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ArrayOfLists'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Lists
    post:
      summary: Create list
      description: Creates new list
      parameters:
        - name: list
          description: List object
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListInput'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/List'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Lists
  /lists/{id}:
    get:
      summary: Returns list object
      parameters:
        - name: id
          description: List's ID
          in: path
          required: true
          type: integer
      responses:
        201:
          description: Updated
          schema:
            $ref: '#/definitions/List'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Lists
    put:
      summary: Update list
      description: Updates list information by ID
      parameters:
        - name: id
          description: List's ID
          in: path
          required: true
          type: integer
        - name: list
          description: List object
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListInput'
      responses:
        201:
          description: Updated
          schema:
            $ref: '#/definitions/List'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Lists
    delete:
      summary: Delete list
      description: Deletes list by ID
      parameters:
        - name: id
          description: List's ID
          in: path
          required: true
          type: integer
      responses:
        204:
          description: Deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Lists
  /lists/{id}/items:
    get:
      summary: List items
      description: Returns all items in specific list by list ID
      parameters:
        - name: id
          description: List's ID
          in: path
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ArrayOfListItems'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - List Items
        - Lists
    post:
      summary: Create list item
      description: Creates new list item in specific list by list ID
      parameters:
        - name: id
          description: List's ID
          in: path
          required: true
          type: integer
        - name: list_item
          description: Item object which should be added to list
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListItemInput'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/ListItem'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - List Items
        - Lists
  /lists/{id}/events:
    get:
      summary: Show events
      description: Returns all events which have list specified by id
      parameters:
        - name: id
          description: List's ID
          in: path
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Lists
        - Events
  /lists/{list_id}/items/{id}:
    get:
      summary: Shows list item
      description: Returns single list item data
      parameters:
        - name: list_id
          description: List ID
          in: path
          required: true
          type: integer
        - name: id
          description: List item ID
          in: path
          required: true
          type: integer
      responses:
          200:
            description: OK
            schema:
              $ref: '#/definitions/ListItem'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
      tags:
        - List Items
        - Lists
    put:
      summary: Update list item
      description: Updates list item information by list ID and item ID
      parameters:
        - name: list_id
          description: List ID
          in: path
          required: true
          type: integer
        - name: id
          description: List item ID
          in: path
          required: true
          type: integer
        - name: list_item
          description: Updated list item object
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListItemInput'
      responses:
        201:
          description: Updated
          schema:
            $ref: '#/definitions/ListItem'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - List Items
        - Lists
    delete:
      summary: Delete list item
      description: Deletes list item by item ID
      parameters:
        - name: list_id
          description: List ID
          in: path
          required: true
          type: integer
        - name: id
          description: List item ID
          in: path
          required: true
          type: integer
      responses:
        204:
          description: Deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - List Items
        - Lists
  /notification_prefs/{id}:
    put:
      summary: Update notification preference
      description: Updates notification preference by ID
      parameters:
        - name: id
          description: Notifications preference ID
          in: path
          required: true
          type: integer
      responses:
        201:
          description: Updated
          schema:
            $ref: '#/definitions/NotificationPreference'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Notifications
        - Events
    delete:
      summary: Delete notification preference
      description: Deletes notification preference by ID
      parameters:
        - name: id
          description: Notifications preference ID
          in: path
          required: true
          type: integer
      responses:
        204:
          description: Deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Notifications
        - Events
  /events/{id}/mute:
    post:
      summary: Stops sending notifications for specified event
      parameters:
        - name: id
          description: Event ID
          in: path
          required: true
          type: integer
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Notifications
        - Events
  /events/{id}/unmute:
    delete:
      summary: Re-starts sending notifications for specified event
      parameters:
        - name: id
          description: Event ID
          in: path
          required: true
          type: integer
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Notifications
        - Events
  /groups:
    get:
      summary: List of croups created by user
      description: Returns a list of groups which were created by user earlier
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
        default:
          description: Unxpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - User groups
    post:
      summary: Creates new group
      parameters:
        - name: group
          description: Group object
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupInput'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Group'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        default:
          description: Unxpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - User groups
  /groups/{id}:
    get:
      summary: Single group object
      description: Returns group object by specified group id
      parameters:
        - name: id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Group'
        default:
          description: Unxpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - User groups
    put:
      summary: Updates existing group
      parameters:
        - name: id
          in: path
          type: integer
          required: true
        - name: group
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupInput'
      responses:
        204:
          description: OK
        default:
          description: Unxpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - User groups
    delete:
      summary: Removes existing group
      parameters:
        - name: id
          in: path
          type: integer
          required: true
      responses:
        204:
          description: OK
        default:
          description: Unxpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - User groups
  /groups/{group_id}/users:
    get:
      summary: List of users in group
      description: Returns list of users which were added to specified (by group_id) group by current user
      parameters:
        - name: group_id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      tags:
        - User groups
  /groups/{id}/leave:
    delete:
      summary: Removes current user from group
      parameters:
        - name: id
          description: Group ID
          in: path
          type: integer
          required: true
      responses:
        200:
          description: OK
        default:
          description: Unxpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - User groups
  /groups/{group_id}/users/{user_id}:
    post:
      summary: Adds user to group
      parameters:
        - name: group_id
          in: path
          type: integer
          required: true
        - name: user_id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: OK
      tags:
        - User groups
    delete:
      summary: Adds user to group
      parameters:
        - name: group_id
          in: path
          type: integer
          required: true
        - name: user_id
          in: path
          type: integer
          required: true
      responses:
        204:
          description: OK
      tags:
        - User groups
  /participations:
    get:
      summary: Returns recently sent invitations
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Participation'
        default:
          description: Unxpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Participations
  /{resource}/{resource_id}/participations:
    get:
      summary: Shows list of participations for specified resource
      parameters:
        - name: resource
          description: Can be 'lists' or 'events'
          in: path
          type: string
          required: true
        - name: resource_id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Participation'
        default:
          description: Unxpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Participations
    post:
      summary: Adds participants to resource
      parameters:
        - name: resource
          description: Can be 'lists' or 'events'
          in: path
          type: string
          required: true
        - name: resource_id
          in: path
          type: integer
          required: true
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ParticipationInput'
      responses:
        200:
          description: OK
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        default:
          description: Unxpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Participations
  /{resource}/{resource_id}/participations/{id}:
    delete:
      description: Deletes participation from resource
      parameters:
        - name: resource
          description: Can be 'lists' or 'events'
          in: path
          type: string
          required: true
        - name: resource_id
          in: path
          type: integer
          required: true
        - name: id
          description: Participation id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: OK
        default:
          description: Unxpected error
          schema:
            $ref: '#/definitions/ErrorsContainer'
      tags:
        - Participations
definitions:
  RegistrationInput:
    type: object
    properties:
      email:
        type: string
        description: Email of registered user
      password:
        type: string
  UserUpdateInput:
    type: object
    properties:
      email:
        type: string
        description: Email of registered user
      password:
        type: string
        description: New user's password
      current_password:
        type: string
        description: Current user's password. Required if password is going to be changed
  SignInCredentials:
    type: object
    required:
      - grant_type
      - username
      - password
    properties:
      grant_type:
        type: string
        description: |
          grant type, can be *password* or *refresh_token*
      username:
        type: string
        description: User's email. Required if grant_type is password
      password:
        type: string
        description: User's password. Required if grant_type is password
      scope:
        type: string
        description: Authorisation scope. Can be sent if grant_type is password. = ['user' or 'admin']
      refresh_token:
        type: string
        description: User's refresh token. Required if grant_type is refresh_token
  SignInResponse:
    type: object
    required:
      - access_token
      - token_type
      - expires_in
      - refresh_token
      - scope
      - created_at
    properties:
      access_token:
        type: string
        description: Uniq access_token
      scope:
        type: string
        description: Authorisation scope
      refresh_token:
        type: string
        description: Uniq refresh_token, can be used when access_token expires
      created_at:
        type: string
        format: date-time
      token_type:
        type: string
        description: Token type, Default - bearer
      expires_in:
        type: integer
        description: Access_token expiration in seconds
  User:
    type: object
    properties:
      id:
        type: integer
      email:
        type: string
      profile:
        $ref: '#/definitions/Profile'
  Calendar:
    type: object
    properties:
      id:
        type: integer
        description: Calendar ID
      title:
        type: string
        description: Calendar title
      creator:
        type: string
        description: User ID who created this calendar
      hex_color:
        type: string
        description: Calendar color in hex string
      main:
        type: boolean
        description: Specifies is it default Curago calendar for user or not
        default: false
      kind:
        type: integer
        format: int16
        description: Enumeration specifies the type of calendar
        default: 0
      visible:
        type: boolean
        description: Specifies if calendar visible in UI
        default: true
  CalendarInput:
    type: object
    properties:
      title:
        type: string
        description: Calendar title
      hex_color:
        type: string
        description: Calendar color in hex string
      main:
        type: boolean
        description: Specifies is it default Curago calendar for user or not
        default: false
      kind:
        type: integer
        format: int16
        description: Enumeration specifies the type of calendar
        default: 0
      visible:
        type: boolean
        description: Specifies if calendar visible in UI
        default: true
  CalendarsGroup:
    type: object
    properties:
      id:
        type: integer
        description: Calendar group ID
      title:
        type: string
        description: Calendar group title
  CalendarsGroupInput:
    type: object
    properties:
      title:
        type: string
        description: Calendar group title
  Event:
    type: object
    properties:
      id:
        type: integer
        description: Calendar item ID
      title:
        type: string
        description: Calendar item title
      user_id:
        type: number
        description: User ID who created this event
      starts_at:
        type: string
        format: date-time
        description: Start date and time for event
      ends_at:
        type: string
        format: date-time
        description: End date and time for event
      all_day:
        type: boolean
        description: Specifies all-day event. If it's true so ends_at is being set to null
        default: false
      notes:
        type: string
        description: Additional notes
      timezone_name:
        type: string
        description: Optional time zone to apply to starting and ending dates. For reminders time zone usually does not matter
      kind:
        type: integer
        format: int16
        description: Enumeration specifies the type of calendar item
        default: 0
      latitude:
        type: number
        format: double
        description: Location lattitude
      longitude:
        type: number
        format: double
        description: Location longitude
      location_name:
        type: string
        description: 'Location name. It might be city name, neighborhood name or anything else'
      muted:
        type: boolean
        description: Shows whether user receives notifications related to this event
      event_recurrences_attributes:
        type: array
        items:
          $ref: '#/definitions/EventReccurence'
      event_cancellations_attributes:
        type: array
        items:
          $ref: '#/definitions/EventCancellation'
      list:
        $ref: '#/definitions/List'
      participations:
        type: array
        items:
          $ref: '#/definitions/Participation'
  EventInput:
    type: object
    properties:
      title:
        type: string
        description: Event's title
      starts_at:
        type: string
        format: date-time
        description: Start date and time for event
      ends_at:
        type: string
        format: date-time
        description: End date and time for event
      all_day:
        type: boolean
        description: Specifies all-day event. If it's true so ends_at is being set to null
        default: false
      notes:
        type: string
        description: Additional notes
      timezone_name:
        type: string
        description: Optional time zone to apply to starting and ending dates. For reminders time zone usually does not matter
      kind:
        type: integer
        format: int16
        description: Enumeration specifies the type of event
        default: 0
      latitude:
        type: number
        format: double
        description: Location lattitude
      longitude:
        type: number
        format: double
        description: Location longitude
      location_name:
        type: string
        description: Location name. It might be city name, neighborhood name or anything else
      separation:
        type: number
        default: 1
        description: >
          The number of intervals at en event's frequency in between occurrences of
          the event. For instance, if an event occurs every other week, it has a
          frequency of weekly and a separation of 2 because there are 2 weeks in
          between occurrences. This property defaults to 1
      count:
        type: number
        description: >
          Specifies a limit number of times the event will occur. Set this property to
          NULL for no limit
      until:
        type: string
        format: date-time
        description: >
          Specifies a limiting date and time after which no recurrences will be
          generated for this event. Set this property to NULL for no limit
      frequency:
        type: string
        description: >
          This property specifies the frequency at which this event recurs.
          Possible values are 'once', 'daily', 'weekly', 'monthly', and 'yearly'
      event_recurrences_attributes:
        type: array
        items:
          $ref: '#/definitions/EventReccurenceInput'
      event_cancellations_attributes:
        type: array
        items:
          $ref: '#/definitions/EventCancellationInput'
  EventReccurenceInput:
    type: object
    properties:
      day:
        type: integer
        description: >
          "For weekly recurring events:
            the day of the week the event occurs.
            0 = Sunday, 1 = Monday, ..., 6 = Saturday.
          For monthly recurring events:
            if the week property is NULL, the day property specifies the day of the
            month that the event occurs. If the week property is non-NULL, the day
            property specifies the day of the week that the event occurs in that week
            of the month."
      week:
        type: integer
        description: >
          "For weekly recurring events:
            these properties should be set to NULL for weekly recurring events.
            Setting these properties to non-NULL values will cause unspecified results.
          For yearly recurring events:
            the usage for the week and day properties of a yearly recurring event are
            exactly the same as their usage for monthly recurring events."
      month:
        type: integer
        description: >
          "For monthly recurring events:
            this property should be set to NULL for monthly recurring events.
            Setting this property to a non-NULL value will cause unspecified results.
          For yearly recurring events:
            if the month property is non-NULL, it specifies the month for which this
            pattern should be used. If it is NULL, this pattern will be for the
            month of the original date/time of the event."
  EventReccurence:
    type: object
    properties:
      id:
        type: integer
      day:
        type: integer
        description: >
          "For weekly recurring events:
            the day of the week the event occurs.
            0 = Sunday, 1 = Monday, ..., 6 = Saturday.
          For monthly recurring events:
            if the week property is NULL, the day property specifies the day of the
            month that the event occurs. If the week property is non-NULL, the day
            property specifies the day of the week that the event occurs in that week
            of the month."
      week:
        type: integer
        description: >
          "For weekly recurring events:
            these properties should be set to NULL for weekly recurring events.
            Setting these properties to non-NULL values will cause unspecified results.
          For yearly recurring events:
            the usage for the week and day properties of a yearly recurring event are
            exactly the same as their usage for monthly recurring events."
      month:
        type: integer
        description: >
          "For monthly recurring events:
            this property should be set to NULL for monthly recurring events.
            Setting this property to a non-NULL value will cause unspecified results.
          For yearly recurring events:
            if the month property is non-NULL, it specifies the month for which this
            pattern should be used. If it is NULL, this pattern will be for the
            month of the original date/time of the event."
  EventCancellationInput:
    type: object
    description: Specifies a date when event shall not occur or be canceled
    properties:
      date:
        type: string
        format: date-time
        description: |
          the date of the recurrence of an event which should be cancelled. If the
          event spans multiple days, this column should be set to the first date on
          which the recurrence to be cancelled falls
  EventCancellation:
    type: object
    properties:
      id:
        type: integer
      date:
        type: string
        format: date-time
  ListInput:
    type: object
    properties:
      title:
        type: string
        description: List title
      notes:
        type: string
        description: Additional notes
      kind:
        type: integer
        description: Specified type of list. Can be 1 - Grocery, 2 - ToDo
  List:
    type: object
    properties:
      id:
        type: string
        description: List ID
      title:
        type: string
        description: List title
      user_id:
        type: string
        description: User ID who created this list
      notes:
        type: string
        description: Additional notes
      kind:
        type: integer
        description: Specified type of list. Can be 1 - Grocery, 2 - ToDo
      items:
        type: array
        items:
          $ref: '#/definitions/ListItem'
      participations:
        type: array
        items:
          $ref: '#/definitions/Participation'
  ListItemInput:
    type: object
    properties:
      title:
        type: string
        description: List item title
      notes:
        type: string
        description: Additional notes
        default: ''
      order:
        type: integer
        format: int16
        description: Sorting order for item in the list
        default: 0
      done:
        type: boolean
        description: Shows whether user finished with this item or not
        default: false
  ListItem:
    type: object
    properties:
      id:
        type: integer
        description: List item ID
      title:
        type: string
        description: List item title
      notes:
        type: string
        description: Additional notes
      order:
        type: integer
        format: int16
        description: Sorting order for item in the list
        default: 0
      done:
        type: boolean
        description: Shows whether user finished with this item or not
        default: false
  NotificationPreference:
    type: object
    properties:
      email:
        type: boolean
        description: Preference for getting email notification
        default: false
      push:
        type: boolean
        description: Preference for getting push notification
        default: false
      sms:
        type: boolean
        description: Preference for getting sms notification
        default: false
  File:
    type: object
    properties:
      id:
        type: integer
        description: File identifier
      public_url:
        type: string
        description: URL of file. You can use it for file dwonloading
  Group:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
        description: Group name
  GroupInput:
    type: object
    required:
      - title
    properties:
      title:
        type: string
        description: Group title
  Profile:
    type: object
    properties:
      id:
        type: integer
      user_id:
        type: integer
      full_name:
        type: string
      image_url:
        type: string
        description: Avatar URL
      color:
        type: string
        description: Hex string representation of color
  ProfileInput:
    type: object
    properties:
      full_name:
        type: string
      image_url:
        type: string
        description: Avatar URL
      color:
        type: string
        description: Hex string representation of color
  ParticipationInput:
    type: object
    properties:
      user_ids:
        description: Array of users ids which should participate events or lists
        type: array
        items:
          type: integer
      emails:
        description: Array of people emails which should participate events or lists
        type: array
        items:
          type: string
          format: email
      message:
        description: Is not being used
        type: string
  Participation:
    type: object
    properties:
      id:
        type: integer
      email:
        description: Person's email which should participate events or lists
        type: string
        format: email
      status:
        description: 'Can be: PENDING = 1, ACCEPTED = 2, DECLINED = 3'
        type: integer
      kind:
        description: "Type of participation: Event, List"
        type: string
      message:
        description: Is not being used
        type: string
      user:
        description: Invited user
        $ref: '#/definitions/User'
      sender:
        description: User sent invitation
        $ref: '#/definitions/User'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  ValidationError:
    type: object
    description: >
      Name of this field will be the same as the name of model field which has validation errors.
      For example, we have model with invalid email field. In this case we have following error object:
      "validation_errors": {
        "email": [
            "Email address is invalid"
        ]
      }
    properties:
      error_field_name:
        type: array
        items:
          type: string
  ErrorsContainer:
    type: object
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/Error'
  ValidationErrorsContainer:
    type: object
    properties:
      validation_errors:
        type: array
        items:
          $ref: '#/definitions/ValidationError'
  ArrayOfCalendars:
    type: array
    items:
      $ref: '#/definitions/Calendar'
  ArrayOfCalendarGroups:
    type: array
    items:
      $ref: '#/definitions/CalendarsGroup'
  ArrayOfEvents:
    type: array
    items:
      $ref: '#/definitions/Event'
  EventsContaner:
    type: object
    properties:
      items:
        type: array
        description: List of items created by current user
        items:
          $ref: '#/definitions/Event'
      shared_items:
        type: array
        description: List of items shared with current user
        items:
          $ref: '#/definitions/Event'
  ArrayOfLists:
    type: array
    items:
      $ref: '#/definitions/List'
  ArrayOfListItems:
    type: array
    items:
      $ref: '#/definitions/ListItem'