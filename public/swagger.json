{
    "swagger": "2.0",
    "info": {
        "title": "Curago API",
        "description": "API documentation for Curago",
        "version": "1.0.3"
    },
    "schemes": [
        "http"
    ],
    "basePath": "/api/v1",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/auth": {
            "post": {
                "summary": "Registers user",
                "description": "Email registration. Requires email, password, and password_confirmation params. A verification email will be sent to the email address provided.",
                "parameters": [
                    {
                        "name": "registration_data",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/RegistrationData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "redurect_url is missing or not allowed, or user creation error"
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "summary": "Updates user",
                "description": "This method will update an existing user's account settings.",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "Account update errors"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "delete": {
                "summary": "Removes user account",
                "description": "This method will destroy users identified by their uid and auth_token headers.",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/auth/sign_in": {
            "post": {
                "summary": "Authenticates user",
                "description": "Email authentication. Requires email and password as params. This method will return a JSON representation of the User model on successful login along with the access-token and client in the header of the response.",
                "parameters": [
                    {
                        "name": "credentials",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SignInCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Authentication error"
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/auth/sign_out": {
            "delete": {
                "summary": "Destroys users sessions",
                "description": "This method will invalidate the user's authentication token.",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Session not found"
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/auth/password": {
            "post": {
                "summary": "Resets user's password",
                "description": "Use this method for sending a password reset confirmation email to users that registered by email. Accepts email and redirect_url as params. The user matching the email param will be sent instructions on how to reset their password. redirect_url is the url to which the user will be redirected after visiting the link contained in the email.",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Missing email or redirect_url"
                    },
                    "403": {
                        "description": "Redirect to %{redirect_url} not allowed."
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "summary": "Updates user's password",
                "description": "Use this method to change users' passwords. Requires password and password_confirmation as params. This method is only valid for users that registered by email.",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Authorization required"
                    },
                    "422": {
                        "description": "Missing password, or you tries putting password for oauth, or other errors"
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/users": {
            "put": {
                "summary": "Updates user data",
                "parameters": [
                    {
                        "name": "user_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/me": {
            "get": {
                "summary": "Current user",
                "description": "Returns current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/calendars_groups": {
            "get": {
                "summary": "Current user calendar groups",
                "description": "Returns all calendar groups created by current user or shared with him",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ArrayOfCalendarGroups"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Calendar Groups"
                ]
            },
            "post": {
                "summary": "Create calendar group",
                "description": "Creates new calendar group",
                "parameters": [
                    {
                        "name": "calendars_group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CalendarsGroupInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CalendarsGroup"
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorsContainer"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorsContainer"
                        }
                    }
                },
                "tags": [
                    "Calendar Groups"
                ]
            }
        },
        "/calendars_groups/:id": {
            "put": {
                "summary": "Update calendar group",
                "description": "Updates calendar group information by ID",
                "parameters": [
                    {
                        "name": "id",
                        "description": "Calendars group ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "calendars_group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CalendarsGroupInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/CalendarsGroup"
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorsContainer"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorsContainer"
                        }
                    }
                },
                "tags": [
                    "Calendar Groups"
                ]
            },
            "delete": {
                "summary": "Delete calendar group",
                "description": "Deletes calendar group by ID",
                "parameters": [
                    {
                        "name": "id",
                        "description": "Calendars group ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorsContainer"
                        }
                    }
                },
                "tags": [
                    "Calendar Groups"
                ]
            }
        },
        "/calendars": {
            "get": {
                "summary": "Current user calendars",
                "description": "Returns all calendars created by current user or shared with him",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ArrayOfCalendars"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorsContainer"
                        }
                    }
                },
                "tags": [
                    "Calendars"
                ]
            },
            "post": {
                "summary": "Create calendar",
                "description": "Creates new calendar",
                "parameters": [
                    {
                        "name": "calendar",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CalendarInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Calendar"
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorsContainer"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorsContainer"
                        }
                    }
                },
                "tags": [
                    "Calendars"
                ]
            }
        },
        "/calendars/:id": {
            "put": {
                "summary": "Update calendar",
                "description": "Updates calendar information by ID",
                "parameters": [
                    {
                        "name": "id",
                        "description": "Calendar ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "calendar",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CalendarInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/CalendarInput"
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorsContainer"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Calendars"
                ]
            },
            "delete": {
                "summary": "Delete calendar",
                "description": "Deletes calendar by ID",
                "parameters": [
                    {
                        "name": "id",
                        "description": "Calendars ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Calendars"
                ]
            }
        },
        "/calendars/:id/events": {
            "get": {
                "summary": "Returns items of specified calendar",
                "parameters": [
                    {
                        "name": "id",
                        "description": "Calendars ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EventsContaner"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorsContainer"
                        }
                    }
                },
                "tags": [
                    "Events",
                    "Calendars"
                ]
            }
        },
        "/calendars/:id/events/:item_id": {
            "post": {
                "summary": "Add specified item to specified calendar",
                "parameters": [
                    {
                        "name": "id",
                        "description": "Calendars ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "item_id",
                        "description": "ID of item which should be added",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorsContainer"
                        }
                    }
                },
                "tags": [
                    "Events",
                    "Calendars"
                ]
            },
            "delete": {
                "summary": "Removed spcified item from specified calendar",
                "parameters": [
                    {
                        "name": "id",
                        "description": "Calendars ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "item_id",
                        "description": "ID of item which should be removed",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Events",
                    "Calendar"
                ]
            }
        },
        "/events": {
            "get": {
                "summary": "Current user calendar items",
                "description": "Returns all calendar items created by current user or shared with him",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ArrayOfCalendarItems"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorsContainer"
                        }
                    }
                },
                "tags": [
                    "Events"
                ]
            },
            "post": {
                "summary": "Create calendar item",
                "description": "Creates new calendar item.\n\nExamples:\n\n**E.B. choir practice weekdays at 5:30pm:**\n\n*Event object properties:*\n- **title**: E.B. choir practice\n- **starts_at:** 5:30pm with date\n- **event_recurrences_attributes**: array of EventReccurenceInput objects\n  with following day property values: 1, 2, 3, 4, 5\n",
                "parameters": [
                    {
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorsContainer"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorsContainer"
                        }
                    }
                },
                "tags": [
                    "Events"
                ]
            }
        },
        "/events/:id": {
            "put": {
                "summary": "Update calendar item",
                "description": "Updates calendar item information by ID",
                "parameters": [
                    {
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorsContainer"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorsContainer"
                        }
                    }
                },
                "tags": [
                    "Events"
                ]
            },
            "delete": {
                "summary": "Delete calendar item",
                "description": "Deletes calendar item by ID",
                "parameters": [
                    {
                        "name": "id",
                        "description": "Calendar's ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorsContainer"
                        }
                    }
                },
                "tags": [
                    "Events"
                ]
            }
        },
        "/events/:id/cancellations": {
            "post": {
                "summary": "Cancels event for a specific date",
                "parameters": [
                    {
                        "name": "id",
                        "description": "Event ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "data",
                        "description": "Cancellation data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventCancellationInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/EventCancellation"
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorsContainer"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorsContainer"
                        }
                    }
                },
                "tags": [
                    "Events",
                    "Event Cancellations"
                ]
            }
        },
        "/event_cancellations/:id": {
            "put": {
                "summary": "Updates event cancellation",
                "parameters": [
                    {
                        "name": "id",
                        "description": "Event ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "data",
                        "description": "Cancellation data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventCancellationInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/EventCancellation"
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorsContainer"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorsContainer"
                        }
                    }
                },
                "tags": [
                    "Events",
                    "Event Cancellations"
                ]
            },
            "delete": {
                "summary": "Removes event cancellation",
                "parameters": [
                    {
                        "name": "id",
                        "description": "Event ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorsContainer"
                        }
                    }
                },
                "tags": [
                    "Events",
                    "Event Cancellations"
                ]
            }
        },
        "/events/:id/documents": {
            "get": {
                "summary": "Returns list of documents relate to this calendar item",
                "parameters": [
                    {
                        "name": "id",
                        "description": "Event ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ArrayOfDocuments"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Events",
                    "Documents"
                ]
            }
        },
        "/events/:id/documents/:document_id": {
            "post": {
                "summary": "Attaches document to calendar item",
                "parameters": [
                    {
                        "name": "document_id",
                        "description": "Document's ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Events",
                    "Documents"
                ]
            },
            "delete": {
                "summary": "Detaches document from calendar item",
                "parameters": [
                    {
                        "name": "document_id",
                        "description": "Document's ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Detached"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Events",
                    "Documents"
                ]
            }
        },
        "/documents": {
            "get": {
                "summary": "Current user documents",
                "description": "Returns all documents created by current user or shared with him",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ArrayOfDocuments"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Documents"
                ]
            },
            "post": {
                "summary": "Create document",
                "description": "Creates new document",
                "parameters": [
                    {
                        "name": "id",
                        "description": "Event ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "document",
                        "description": "Document",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DocumentInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Document"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Documents"
                ]
            }
        },
        "/documents/:id": {
            "put": {
                "summary": "Update document",
                "description": "Updates document information by ID",
                "parameters": [
                    {
                        "name": "id",
                        "description": "Document's ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/Document"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Documents"
                ]
            },
            "delete": {
                "summary": "Delete document",
                "description": "Deletes document by ID",
                "parameters": [
                    {
                        "name": "id",
                        "description": "Document's ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Documents"
                ]
            }
        },
        "/files": {
            "post": {
                "summary": "Accepts files",
                "description": "Accept files and sends them to storage",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "description": "binary file",
                        "in": "formData",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Files",
                    "Documents"
                ]
            }
        },
        "/files/:id": {
            "get": {
                "summary": "Returns information about file by its ID",
                "parameters": [
                    {
                        "name": "id",
                        "description": "File's ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Files",
                    "Documents"
                ]
            },
            "delete": {
                "summary": "Removes file",
                "parameters": [
                    {
                        "name": "id",
                        "description": "File's ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Detached"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Files",
                    "Documents"
                ]
            }
        },
        "/lists": {
            "get": {
                "summary": "Current user lists",
                "description": "Returns all lists created by current user or shared with him",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ArrayOfLists"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Lists"
                ]
            },
            "post": {
                "summary": "Create list",
                "description": "Creates new list",
                "parameters": [
                    {
                        "name": "list",
                        "description": "List object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/List"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Lists"
                ]
            }
        },
        "/lists/:id": {
            "put": {
                "summary": "Update list",
                "description": "Updates list information by ID",
                "parameters": [
                    {
                        "name": "id",
                        "description": "List's ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "list",
                        "description": "List object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/List"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Lists"
                ]
            },
            "delete": {
                "summary": "Delete list",
                "description": "Deletes list by ID",
                "parameters": [
                    {
                        "name": "id",
                        "description": "List's ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Lists"
                ]
            }
        },
        "/lists/:id/items": {
            "get": {
                "summary": "List items",
                "description": "Returns all items in specific list by list ID",
                "parameters": [
                    {
                        "name": "id",
                        "description": "List's ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ArrayOfListItems"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "List Items",
                    "Lists"
                ]
            },
            "post": {
                "summary": "Create list item",
                "description": "Creates new list item in specific list by list ID",
                "parameters": [
                    {
                        "name": "id",
                        "description": "List's ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ListItemInput"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "List Items",
                    "Lists"
                ]
            }
        },
        "/lists_items/:id": {
            "get": {
                "summary": "Shows list item",
                "description": "Returns single list item data",
                "parameters": [
                    {
                        "name": "id",
                        "description": "List item ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ListItem"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "List Items",
                    "Lists"
                ]
            },
            "put": {
                "summary": "Update list item",
                "description": "Updates list item information by list ID and item ID",
                "parameters": [
                    {
                        "name": "id",
                        "description": "List item ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "list_item",
                        "description": "Updated list item object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListItemInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/ListItem"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "List Items",
                    "Lists"
                ]
            },
            "delete": {
                "summary": "Delete list item",
                "description": "Deletes list item by item ID",
                "parameters": [
                    {
                        "name": "id",
                        "description": "List item ID",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "List Items",
                    "Lists"
                ]
            }
        },
        "/notification_prefs/:id": {
            "put": {
                "summary": "Update notification preference",
                "description": "Updates notification preference by ID",
                "responses": {
                    "201": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/NotificationPreference"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Notifications",
                    "Events"
                ]
            },
            "delete": {
                "summary": "Delete notification preference",
                "description": "Deletes notification preference by ID",
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Notifications",
                    "Calendar Items"
                ]
            }
        },
        "/calendar_items/:id/notifications": {
            "get": {
                "summary": "Returns notifications preferences for calendar item",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NotificationPreference"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Notifications",
                    "Events"
                ]
            },
            "post": {
                "summary": "Create notification preference",
                "description": "Creates new notification preference",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/NotificationPreference"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Notifications",
                    "Events"
                ]
            }
        },
        "/participations": {
            "get": {
                "summary": "Current user participations",
                "description": "Returns all shareable items (calendar group, calendar, calendar item, document or list) shared BY current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ArrayOfParticipations"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Participations"
                ]
            },
            "post": {
                "summary": "Create participation",
                "description": "Share some shareable item (calendar group, calendar, calendar item, document or list) with friend",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Participation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Participations"
                ]
            }
        },
        "/participations/:id": {
            "put": {
                "summary": "Update participation",
                "description": "Updates participation information by ID",
                "responses": {
                    "201": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/Participation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Participations"
                ]
            },
            "delete": {
                "summary": "Delete participation",
                "description": "Deletes participation by ID",
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Participations"
                ]
            }
        },
        "/sharings": {
            "post": {
                "summary": "Shares some entity with some user",
                "parameters": [
                    {
                        "name": "sharing_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SharingInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/SharingItem"
                        }
                    }
                },
                "tags": [
                    "Sharings"
                ]
            }
        }
    },
    "definitions": {
        "RegistrationData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email of registered user"
                },
                "password": {
                    "type": "string"
                },
                "password_confirmation": {
                    "type": "string",
                    "description": "Must be the same as password"
                }
            }
        },
        "SignInCredentials": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email of registered user"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "Calendar": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Calendar ID"
                },
                "title": {
                    "type": "string",
                    "description": "Calendar title"
                },
                "creator": {
                    "type": "string",
                    "description": "User ID who created this calendar"
                },
                "hex_color": {
                    "type": "string",
                    "description": "Calendar color in hex string"
                },
                "main": {
                    "type": "boolean",
                    "description": "Specifies is it default Curago calendar for user or not",
                    "default": false
                },
                "read_only": {
                    "type": "boolean",
                    "description": "Specifies if calendar read only or not",
                    "default": false
                },
                "kind": {
                    "type": "integer",
                    "format": "int16",
                    "description": "Enumeration specifies the type of calendar",
                    "default": 0
                },
                "visible": {
                    "type": "boolean",
                    "description": "Specifies if calendar visible in UI",
                    "default": true
                }
            }
        },
        "CalendarInput": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Calendar title"
                },
                "hex_color": {
                    "type": "string",
                    "description": "Calendar color in hex string"
                },
                "main": {
                    "type": "boolean",
                    "description": "Specifies is it default Curago calendar for user or not",
                    "default": false
                },
                "read_only": {
                    "type": "boolean",
                    "description": "Specifies if calendar read only or not",
                    "default": false
                },
                "kind": {
                    "type": "integer",
                    "format": "int16",
                    "description": "Enumeration specifies the type of calendar",
                    "default": 0
                },
                "visible": {
                    "type": "boolean",
                    "description": "Specifies if calendar visible in UI",
                    "default": true
                }
            }
        },
        "CalendarsGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Calendar group ID"
                },
                "title": {
                    "type": "string",
                    "description": "Calendar group title"
                }
            }
        },
        "CalendarsGroupInput": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Calendar group title"
                }
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Calendar item ID"
                },
                "title": {
                    "type": "string",
                    "description": "Calendar item title"
                },
                "user_id": {
                    "type": "number",
                    "description": "User ID who created this calendar item"
                },
                "starts_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start date and time for calendar item"
                },
                "ends_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "End date and time for calendar item"
                },
                "notes": {
                    "type": "string",
                    "description": "Additional notes"
                },
                "timezone_name": {
                    "type": "string",
                    "description": "Optional time zone to apply to starting and ending dates. For reminders time zone usually does not matter"
                },
                "kind": {
                    "type": "integer",
                    "format": "int16",
                    "description": "Enumeration specifies the type of calendar item",
                    "default": 0
                },
                "lattitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Location lattitude"
                },
                "longitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Location longitude"
                },
                "location_name": {
                    "type": "string",
                    "description": "Location name. It might be city name, neighborhood name or anything else"
                }
            }
        },
        "EventInput": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Event's title"
                },
                "starts_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start date and time for event"
                },
                "ends_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "End date and time for event"
                },
                "notes": {
                    "type": "string",
                    "description": "Additional notes"
                },
                "timezone_name": {
                    "type": "string",
                    "description": "Optional time zone to apply to starting and ending dates. For reminders time zone usually does not matter"
                },
                "kind": {
                    "type": "integer",
                    "format": "int16",
                    "description": "Enumeration specifies the type of event",
                    "default": 0
                },
                "lattitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Location lattitude"
                },
                "longitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Location longitude"
                },
                "location_name": {
                    "type": "string",
                    "description": "Location name. It might be city name, neighborhood name or anything else"
                },
                "separation": {
                    "type": "number",
                    "default": 1,
                    "description": "The number of intervals at en event's frequency in between occurrences of the event. For instance, if an event occurs every other week, it has a frequency of weekly and a separation of 2 because there are 2 weeks in between occurrences. This property defaults to 1\n"
                },
                "count": {
                    "type": "number",
                    "description": "Specifies a limit number of times the event will occur. Set this property to NULL for no limit\n"
                },
                "until": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Specifies a limiting date and time after which no recurrences will be generated for this event. Set this property to NULL for no limit\n"
                },
                "frequency": {
                    "type": "string",
                    "description": "This property specifies the frequency at which this event recurs. Possible values are 'once', 'daily', 'weekly', 'monthly', and 'yearly'\n"
                },
                "event_recurrences_attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventReccurenceInput"
                    }
                },
                "event_cancelation_attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventCancellationInput"
                    }
                }
            }
        },
        "EventReccurenceInput": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "integer",
                    "description": "\"For weekly recurring events:\n  the day of the week the event occurs.\n  0 = Sunday, 1 = Monday, ..., 6 = Saturday.\nFor monthly recurring events:\n  if the week property is NULL, the day property specifies the day of the\n  month that the event occurs. If the week property is non-NULL, the day\n  property specifies the day of the week that the event occurs in that week\n  of the month.\"\n"
                },
                "week": {
                    "type": "integer",
                    "description": "\"For weekly recurring events:\n  these properties should be set to NULL for weekly recurring events.\n  Setting these properties to non-NULL values will cause unspecified results.\nFor yearly recurring events:\n  the usage for the week and day properties of a yearly recurring event are\n  exactly the same as their usage for monthly recurring events.\"\n"
                },
                "month": {
                    "type": "integer",
                    "description": "\"For monthly recurring events:\n  this property should be set to NULL for monthly recurring events.\n  Setting this property to a non-NULL value will cause unspecified results.\nFor yearly recurring events:\n  if the month property is non-NULL, it specifies the month for which this\n  pattern should be used. If it is NULL, this pattern will be for the\n  month of the original date/time of the event.\"\n"
                }
            }
        },
        "EventCancellationInput": {
            "type": "object",
            "description": "Specifies a date when event shall not occur or be canceled",
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "the date of the recurrence of an event which should be cancelled. If the\nevent spans multiple days, this column should be set to the first date on\nwhich the recurrence to be cancelled falls\n"
                }
            }
        },
        "EventCancellation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DocumentInput": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Document title"
                },
                "notes": {
                    "type": "string",
                    "description": "Additional notes"
                },
                "tags": {
                    "type": "string",
                    "description": "Comma separated tags"
                },
                "uploaded_file_id": {
                    "type": "integer",
                    "description": "ID of file which was uploaded earlier"
                }
            }
        },
        "Document": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Document ID"
                },
                "title": {
                    "type": "string",
                    "description": "Document title"
                },
                "notes": {
                    "type": "string",
                    "description": "Additional notes"
                },
                "tags": {
                    "type": "string",
                    "description": "Comma separated tags"
                },
                "file": {
                    "$ref": "#/definitions/File"
                }
            }
        },
        "ListInput": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "List title"
                },
                "notes": {
                    "type": "string",
                    "description": "Additional notes"
                },
                "kind": {
                    "type": "integer",
                    "description": "Specified type of list. Can be 1 - Grocery, 2 - ToDo"
                }
            }
        },
        "List": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "List ID"
                },
                "title": {
                    "type": "string",
                    "description": "List title"
                },
                "user_id": {
                    "type": "string",
                    "description": "User ID who created this list"
                },
                "notes": {
                    "type": "string",
                    "description": "Additional notes"
                },
                "kind": {
                    "type": "integer",
                    "description": "Specified type of list. Can be 1 - Grocery, 2 - ToDo"
                }
            }
        },
        "ListItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "List item ID"
                },
                "title": {
                    "type": "string",
                    "description": "List item title"
                },
                "notes": {
                    "type": "string",
                    "description": "Additional notes"
                },
                "order": {
                    "type": "integer",
                    "format": "int16",
                    "description": "Sorting order for item in the list",
                    "default": 0
                },
                "done": {
                    "type": "boolean",
                    "description": "Shows whether user finished with this item or not",
                    "default": false
                }
            }
        },
        "ListItemInput": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "List item title"
                },
                "notes": {
                    "type": "string",
                    "description": "Additional notes"
                },
                "order": {
                    "type": "integer",
                    "format": "int16",
                    "description": "Sorting order for item in the list",
                    "default": 0
                },
                "done": {
                    "type": "boolean",
                    "description": "Shows whether user finished with this item or not",
                    "default": false
                }
            }
        },
        "NotificationPreference": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "boolean",
                    "description": "Preference for getting email notification",
                    "default": false
                },
                "push": {
                    "type": "boolean",
                    "description": "Preference for getting push notification",
                    "default": false
                },
                "sms": {
                    "type": "boolean",
                    "description": "Preference for getting sms notification",
                    "default": false
                }
            }
        },
        "Participation": {
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string",
                    "description": "Calendar item ID"
                },
                "participant": {
                    "type": "string",
                    "description": "User ID with whom to share"
                },
                "sharedBy": {
                    "type": "string",
                    "description": "User ID who shares"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Optional start date and time for share"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Optional end date and time for share"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Specifies if this is read only share",
                    "default": true
                },
                "sharedItem": {
                    "type": "object",
                    "description": "Item to be shared. It should be only one item - calendar, calendar group, calendar item, document or list",
                    "properties": {
                        "calendar": {
                            "type": "string",
                            "description": "Optional calendar ID to be shared"
                        },
                        "calendarGroup": {
                            "type": "string",
                            "description": "Optional calendar group ID to be shared"
                        },
                        "calendarItem": {
                            "type": "string",
                            "description": "Optional calendar item ID to be shared"
                        },
                        "document": {
                            "type": "string",
                            "description": "Optional document ID to be shared"
                        },
                        "list": {
                            "type": "string",
                            "description": "Optional list ID to be shared"
                        }
                    }
                }
            }
        },
        "UserInput": {
            "type": "object",
            "properties": {
                "user_name": {
                    "type": "string",
                    "description": "User full name"
                },
                "email": {
                    "type": "string",
                    "description": "User email"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "User ID"
                },
                "user_name": {
                    "type": "string",
                    "description": "User full name"
                },
                "email": {
                    "type": "string",
                    "description": "User email"
                }
            }
        },
        "File": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "File identifier"
                },
                "public_url": {
                    "type": "string",
                    "description": "URL of file. You can use it for file dwonloading"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "ValidationError": {
            "type": "object",
            "description": "Name of this field will be the same as the name of model field which has validation errors. For example, we have model with invalid email field. In this case we have following error object: \"validation_errors\": {\n  \"email\": [\n      \"Email address is invalid\"\n  ]\n}\n",
            "properties": {
                "error_field_name": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ErrorsContainer": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                }
            }
        },
        "ValidationErrorsContainer": {
            "type": "object",
            "properties": {
                "validation_errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ValidationError"
                    }
                }
            }
        },
        "SharingItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "subject_class": {
                    "type": "string",
                    "description": "Type of sharing entity for example: Calendar, CalendarItem, etc.\n"
                },
                "subject_id": {
                    "type": "integer",
                    "description": "ID of entity which should be shared"
                },
                "user_id": {
                    "type": "integer",
                    "description": "ID of user you're going to share with"
                }
            }
        },
        "SharingInput": {
            "type": "object",
            "properties": {
                "subject_class": {
                    "type": "string",
                    "description": "Type of sharing entity for example: Calendar, CalendarItem, etc.\n"
                },
                "subject_id": {
                    "type": "integer",
                    "description": "ID of entity which should be shared"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "ArrayOfCalendars": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Calendar"
            }
        },
        "ArrayOfCalendarGroups": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/CalendarsGroup"
            }
        },
        "ArrayOfCalendarItems": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Event"
            }
        },
        "EventsContaner": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of items created by current user",
                    "items": {
                        "$ref": "#/definitions/Event"
                    }
                },
                "shared_items": {
                    "type": "array",
                    "description": "List of items shared with current user",
                    "items": {
                        "$ref": "#/definitions/Event"
                    }
                }
            }
        },
        "ArrayOfDocuments": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Document"
            }
        },
        "ArrayOfLists": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/List"
            }
        },
        "ArrayOfListItems": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ListItem"
            }
        },
        "ArrayOfParticipations": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Participation"
            }
        }
    }
}